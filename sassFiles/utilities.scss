@use 'sass:math';

//Utilities map containing other maps for different styles, which will then be looped through using an @each loop to generate classes and apply them to elements for styling - exactly like bootstrap.
$utilities: (

//Padding
    'padding': ( 
        'prefix': 'p',
        'values': (
            '0': 0,
            '1': $base-padding,
            '2': $base-padding * 2,
            '3': $base-padding * 4,
            '4': $base-padding * 6,
            '5': $base-padding * 8
        )
    ),

    'padding-top': ( 
        'prefix': 'pt',
        'values': ( 
            '0': 0,
            '1': $base-padding,
            '2': $base-padding * 2,
            '3': $base-padding * 4,
            '4': $base-padding * 6,
            '5': $base-padding * 8
        )
    ),

    'padding-right': ( 
        'prefix': 'pr',
        'values': ( 
            '0': 0,
            '1': $base-padding,
            '2': $base-padding * 2,
            '3': $base-padding * 4,
            '4': $base-padding * 6,
            '5': $base-padding * 8
        )
    ),

    'padding-bottom': ( 
        'prefix': 'pb',
        'values': ( 
            '0': 0,
            '1': $base-padding,
            '2': $base-padding * 2,
            '3': $base-padding * 4,
            '4': $base-padding * 6,
            '5': $base-padding * 8
        )
    ),

    'padding-left': ( 
        'prefix': 'pl',
        'values': ( 
            '0': 0,
            '1': $base-padding,
            '2': $base-padding * 2,
            '3': $base-padding * 4,
            '4': $base-padding * 6,
            '5': $base-padding * 8
        )
    ),
//----------------------------------

//Margin
    'margin': ( 
        'prefix': 'm',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),

    'margin-top': ( 
        'prefix': 'mt',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),

    'margin-right': ( 
        'prefix': 'mr',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),

    'margin-bottom': ( 
        'prefix': 'mb',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),

    'margin-left': ( 
        'prefix': 'ml',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),
//----------------------------------

//Border 
    'border': ( 
        'prefix': 'b',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),

    'border-top': ( 
        'prefix': 'bt',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),

    'border-right': ( 
        'prefix': 'br',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),

    'border-bottom': ( 
        'prefix': 'bb',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ),
    
    'border-left': ( 
        'prefix': 'bl',
        'values': (
            '0': 0,
            '1': $base-margin,
            '2': $base-margin * 2,
            '3': $base-margin * 4,
            '4': $base-margin * 6,
            '5': $base-margin * 8
        )
    ) 
);

//Cycles through the key(properies) and values(map) in utilities
@each $property, $map in $utilities {
    //so $prefix will change value through each iteration, so 1st it = p then second = pl 
    $prefix: map-get($map , 'prefix');

    //exactly the same as above but one more map deep
    $values: map-get($map , 'values');
    @each $k, $v in $values {
         .#{$prefix}-#{$k} {
             #{$property}: $v;
         }
    }
}
