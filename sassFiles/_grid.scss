@use 'sass:math';

$grid-columns: 12;


//base layout classes
.container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

//col-classes
//Invoking the mixin now gives you chance in the {} to replace the @content

@include baseCol {
    @for $i from 1 to ($grid-columns +1) {
        .col-#{$i}{
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xs { 
    @for $i from 1 to ($grid-columns +1) {
        .col-#{$i}-xs{
            width: math.div($i * 100%, $grid-columns);
            //div(number1 , duvidedBy -> number2)
        }
    }
}

@include sm {
    @for $i from 1 to ($grid-columns +1) {
        .col-#{$i}-sm{
            width: math.div($i * 100%, $grid-columns);
            //div(number1 , duvidedBy -> number2)
        }
    }
}

@include md {
    @for $i from 1 to ($grid-columns +1) {
        .col-#{$i}-md{
            width: math.div($i * 100%, $grid-columns);
            //div(number1 , duvidedBy -> number2)
        }
    }
}

@include lg {
    @for $i from 1 to ($grid-columns +1) {
        .col-#{$i}-lg{
            width: math.div($i * 100%, $grid-columns);
            //div(number1 , duvidedBy -> number2)
        }
    }
}

@include xl {
    @for $i from 1 to ($grid-columns +1) {
        .col-#{$i}-xl{
            width: math.div($i * 100%, $grid-columns);
            //div(number1 , duvidedBy -> number2)
        }
    }
} 